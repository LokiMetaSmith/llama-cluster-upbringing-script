- name: E2E Cluster Health Check
  hosts: all
  gather_facts: false
  tasks:
    - name: Check that Consul is running and has a leader
      uri:
        url: "http://{{ ansible_host }}:8500/v1/status/leader"
        return_content: yes
      register: consul_leader
      failed_when: consul_leader.content == '""'

    - name: Check that Nomad is running and has a leader
      uri:
        url: "http://{{ ansible_host }}:4646/v1/status/leader"
        return_content: yes
      register: nomad_leader
      failed_when: nomad_leader.content == '""'

    - name: Check that the pipecat application is running
      uri:
        url: "http://{{ ansible_host }}:8000/health"
        return_content: yes
      register: pipecat_status
      failed_when: "'ok' not in pipecat_status.content"

    - name: Verify that the pipecat application is running with the Docker driver
      command: nomad job inspect pipecat-app
      register: pipecat_job_inspect
      changed_when: false

    - name: Assert that the driver is 'exec'
      assert:
        that:
          - "(pipecat_job_inspect.stdout | from_json).TaskGroups[0].Tasks[0].Driver == 'exec'"

- name: Llama.cpp Benchmark as an E2E Test
  hosts: controller_nodes
  tasks:
    - name: Run the llama-benchmark Nomad job
      command: nomad job run ansible/jobs/benchmark.nomad
      register: benchmark_run

    - name: Wait for the benchmark job to complete
      command: nomad job status llama-benchmark
      register: benchmark_status
      until: "'dead' in benchmark_status.stdout"
      retries: 20
      delay: 10

    - name: Get benchmark logs
      command: nomad job logs llama-benchmark
      register: benchmark_logs

    - name: Assert that the benchmark produced a result
      assert:
        that:
          - "'tokens/s' in benchmark_logs.stdout"

- name: Playwright-based Web UI E2E Test
  hosts: controller_nodes
  tasks:
    - name: Install Playwright browser dependencies
      command: python -m playwright install
      register: playwright_install
      changed_when: "'Browsers installed' in playwright_install.stdout"

    - name: Run Playwright tests with pytest
      command: python -m pytest e2e/
      register: playwright_test_results
      changed_when: false # This task only reports status, doesn't change state

    - name: Display Playwright test results
      debug:
        var: playwright_test_results.stdout_lines
