# This Nomad job file creates a pool of llama.cpp rpc-server providers.
# Its only purpose is to run the rpc-server daemon on each worker node,
# exposing its GPU(s) to the network for an orchestrator to use.

job "{{ job_name | default('llamacpp-rpc-pool') }}" {
  datacenters = ["dc1"]
  namespace   = "{{ nomad_namespace | default('default') }}"
  
  meta {
    # These should reflect the specific model this job instance is for
    model_name    = "{{ item.name | default('unknown') }}"
    model_filename= "{{ item.filename | default('unknown') }}"
    memory_mb   = "{{ item.memory_mb | default(0) }}"
    # Namespace is defined at job level, redundant here.
    # avg_tps is not available in this loop context.
    # The problematic 'models' line is removed/corrected above.
  }
  
  # --- GPU PROVIDER GROUP ---
  # This group runs the rpc-server processes that expose GPUs.
  group "rpc-provider" {
    count = {{ worker_count | default(1) }}

    network {
      mode = "host"
      port "rpc" {} # Nomad will assign a dynamic port.
    }

    # Register the RPC provider in Consul for discovery by the orchestrator.
    service {
      name     = "{{ job_name | default('llamacpp-rpc-pool') }}-provider"
      provider = "consul"
      port     = "rpc"

      # --- METADATA GOES HERE IN TAGS ---
      tags = [
        "rpc-provider", # General tag for discovery
        "model={{ item.filename }}",
        "avg_tps={{ avg_tokens_per_second | default(0) | float | round(2) }}", # Uses var passed from Ansible
        "memory_mb={{ item.memory_mb | default(0) }}"
        # Add other relevant tags if needed
      ]
      # --- END TAGS ---

      check {
        type     = "tcp"
        interval = "15s"
        timeout  = "5s"
      }
    }

    task "rpc-server-provider" {
      driver = "raw_exec"

      config {
        command = "/usr/local/bin/rpc-server"
        args = [
          "-H", "0.0.0.0",
          "-p", "{{ '{{' }} env \"NOMAD_PORT_rpc\" {{ '}}' }}"
        ]
      }

      resources {
        cpu    = 500
        memory = 1024 # Memory for the RPC daemon itself.
      }
        
      # Optional logging directory (for troubleshooting)
      artifact {
        source      = "local/"
        destination = "local"
      }
    }
  }
}
