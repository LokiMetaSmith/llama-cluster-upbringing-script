---
- name: Install build and runtime dependencies for llama.cpp
  ansible.builtin.apt:
    name:
      - build-essential
      - git
      - cmake
      - libssl-dev
      - libcurl4-openssl-dev
    state: present
  become: yes

- name: Create build directory for llama.cpp
  ansible.builtin.file:
    path: /opt/llama.cpp-build
    state: directory
    mode: '0755'
  become: yes

- name: Clone llama.cpp repository
  ansible.builtin.git:
    repo: 'https://github.com/ggml-org/llama.cpp.git'
    dest: /opt/llama.cpp-build
    version: master
    update: yes
    force: yes
  become: yes

- name: Configure llama.cpp build with RPC and shared libraries
  ansible.builtin.command:
    cmd: cmake -B build -DGGML_RPC=ON -DLLAMA_SERVER_SSL=ON -DBUILD_SHARED_LIBS=ON
  args:
    chdir: /opt/llama.cpp-build
    creates: /opt/llama.cpp-build/build/Makefile
  become: yes

- name: Build llama.cpp
  ansible.builtin.command:
    cmd: cmake --build build --config Release -j
  args:
    chdir: /opt/llama.cpp-build
    creates: /opt/llama.cpp-build/build/bin/llama-server
  become: yes

- name: Find all compiled binaries and libraries
  ansible.builtin.find:
    paths: "/opt/llama.cpp-build/build/bin"
    patterns: '*'
    file_type: any
  register: llama_artifacts
  become: yes

- name: Install all compiled artifacts to /usr/local/bin
  ansible.builtin.copy:
    src: "{{ item.path }}"
    dest: "/usr/local/bin/{{ item.path | basename }}"
    mode: '0755'
    remote_src: yes
  loop: "{{ llama_artifacts.files | selectattr('path', 'is not', 'match', '.*\\.so$') | list }}"
  become: yes

- name: Install shared libraries to /usr/local/lib
  ansible.builtin.copy:
    src: "{{ item.path }}"
    dest: "/usr/local/lib/{{ item.path | basename }}"
    mode: '0755'
    remote_src: yes
  loop: "{{ llama_artifacts.files | selectattr('path', 'match', '.*\\.so$') | list }}"
  become: yes

- name: Update the shared library cache
  ansible.builtin.command:
    cmd: ldconfig
  become: yes

- name: Verify llama-server binary installation
  ansible.builtin.stat:
    path: /usr/local/bin/llama-server
  register: llama_server_stat

- name: Fail if llama-server is not installed or not executable
  ansible.builtin.fail:
    msg: "llama-server was not found at /usr/local/bin/llama-server or is not executable."
  when: not llama_server_stat.stat.exists or not llama_server_stat.stat.executable

- name: Clean up llama.cpp build directory
  ansible.builtin.file:
    path: /opt/llama.cpp-build
    state: absent
  become: yes

- name: Create Nomad jobs directory
  ansible.builtin.file:
    path: /opt/nomad/jobs
    state: directory
    mode: '0755'
  become: yes

- name: Copy llamacpp-rpc Nomad job file
  ansible.builtin.template:
    src: ../../jobs/llamacpp-rpc.nomad
    dest: /opt/nomad/jobs/llamacpp-rpc.nomad
  vars:
    llm_models_var: "{{ llm_models }}"

- name: Copy benchmark Nomad job file
  ansible.builtin.template:
    src: ../../jobs/benchmark.nomad
    dest: /opt/nomad/jobs/benchmark.nomad
  when: "'controller_nodes' in group_names"
