- name: Install build and runtime dependencies for llama.cpp
  ansible.builtin.apt:
    name:
      - build-essential
      - git
      - cmake
      - libssl-dev
      - libcurl4-openssl-dev
      - libstdc++6
    state: present
  become: yes

- name: Build and install llama.cpp
  become: yes
  block:
    - name: Create build directory for llama.cpp
      ansible.builtin.file:
        path: /opt/llama.cpp-build
        state: directory
        mode: '0755'

    - name: Clone llama.cpp repository
      ansible.builtin.git:
        repo: 'https://github.com/ggml-org/llama.cpp.git'
        dest: /opt/llama.cpp-build
        version: master
        update: yes
      register: llama_git_result

    - name: Configure llama.cpp build with RPC and shared libraries
      ansible.builtin.command:
        cmd: cmake -B build -DGGML_RPC=ON -DLLAMA_SERVER_SSL=ON -DBUILD_SHARED_LIBS=ON
      args:
        chdir: /opt/llama.cpp-build
        creates: /opt/llama.cpp-build/build/Makefile

    - name: Build llama.cpp
      ansible.builtin.command:
        cmd: cmake --build build --config Release -j
      args:
        chdir: /opt/llama.cpp-build
      when: llama_git_result.changed

    - name: Find all compiled binaries and libraries
      ansible.builtin.find:
        paths: "/opt/llama.cpp-build/build/bin"
        patterns: '*'
        file_type: any
      register: llama_artifacts

    - name: Install all compiled binaries to /usr/local/bin
      ansible.builtin.copy:
        src: "{{ item.path }}"
        dest: "/usr/local/bin/{{ item.path | basename }}"
        mode: '0755'
        remote_src: yes
      loop: "{{ llama_artifacts.files | rejectattr('path', 'match', '.*\\.so$') | list }}"

    - name: Install shared libraries to /usr/local/lib
      ansible.builtin.copy:
        src: "{{ item.path }}"
        dest: "/usr/local/lib/{{ item.path | basename }}"
        mode: '0755'
        remote_src: yes
      loop: "{{ llama_artifacts.files | selectattr('path', 'match', '.*\\.so$') | list }}"
      notify: update ld cache

- name: Create Nomad jobs directory
  ansible.builtin.file:
    path: /opt/nomad/jobs
    state: directory
    mode: '0755'
  become: yes

- name: Deploy Prima Expert Nomad job template
  ansible.builtin.template:
    src: ../../jobs/prima-expert.nomad
    dest: /opt/nomad/jobs/prima-expert.nomad
    mode: '0644'
  vars:
    job_name: "prima-expert-main"
    service_name: "prima-api-main"
    namespace: "default"
    model_list: "{{ main_expert_models }}"
    worker_count: 1

- name: Copy benchmark Nomad job file
  ansible.builtin.template:
    src: ../../jobs/benchmark.nomad
    dest: /opt/nomad/jobs/benchmark.nomad
  when: "'controller_nodes' in group_names"
