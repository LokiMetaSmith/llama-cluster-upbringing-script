- name: Create a virtual environment for the application
  ansible.builtin.command:
    cmd: "python3 -m venv /opt/pipecatapp/venv"
    creates: "/opt/pipecatapp/venv/bin/pip"
  become: yes

- name: Ensure correct ownership of the virtual environment
  ansible.builtin.file:
    path: "/opt/pipecatapp/venv"
    owner: "{{ target_user }}"
    group: "{{ target_user }}"
    recurse: yes
  become: yes

- name: Copy requirements.txt to the application directory
  copy:
    src: requirements.txt
    dest: "/opt/pipecatapp/requirements.txt"
    owner: "{{ target_user }}"
    group: "{{ target_user }}"
  become: yes

- name: Create a persistent temporary directory for pip builds
  ansible.builtin.file:
    path: /var/tmp/ansible_pip_build
    state: directory
    mode: '0777'
  become: yes

- name: Install/Upgrade base python packages in venv
  ansible.builtin.pip:
    name:
      - pip
      - setuptools
      - wheel
      - cython
    state: latest
    executable: "/opt/pipecatapp/venv/bin/pip3"
  become: yes
  become_user: "{{ target_user }}"

- name: Install python dependencies into the virtual environment
  ansible.builtin.pip:
    requirements: "/opt/pipecatapp/requirements.txt"
    executable: "/opt/pipecatapp/venv/bin/pip3"
    extra_args: -v
  environment:
    TMPDIR: /var/tmp/ansible_pip_build
  async: 1200 # Set timeout to 20 minutes
  poll: 10    # Check status every 10 seconds
  become: yes
  become_user: "{{ target_user }}"

- name: Clean up pip build directory
  ansible.builtin.file:
    path: /var/tmp/ansible_pip_build
    state: absent
  become: yes
