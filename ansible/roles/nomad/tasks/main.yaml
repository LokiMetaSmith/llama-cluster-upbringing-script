---
- name: Download Nomad
  ansible.builtin.get_url:
    url: "{{ nomad_zip_url }}"
    dest: "/tmp/nomad.zip"
    mode: '0644'

- name: Create a temporary directory for unzipping Nomad
  ansible.builtin.tempfile:
    state: directory
    suffix: nomad-unzip
  register: temp_unzip_dir

- name: Unzip Nomad archive
  ansible.builtin.unarchive:
    src: "/tmp/nomad.zip"
    dest: "{{ temp_unzip_dir.path }}"
    remote_src: yes

- name: Find the Nomad binary in the unzipped directory
  ansible.builtin.find:
    paths: "{{ temp_unzip_dir.path }}"
    patterns: "nomad"
    recurse: yes
    file_type: file
  register: nomad_binary_find

- name: Fail if Nomad binary is not found
  ansible.builtin.fail:
    msg: "The 'nomad' executable was not found in the downloaded archive."
  when: nomad_binary_find.matched == 0

- name: Move Nomad binary to /usr/local/bin
  ansible.builtin.copy:
    src: "{{ nomad_binary_find.files[0].path }}"
    dest: /usr/local/bin/nomad
    remote_src: yes
    mode: '0755'
  become: yes

- name: Clean up temporary unzip directory
  ansible.builtin.file:
    path: "{{ temp_unzip_dir.path }}"
    state: absent
  when: temp_unzip_dir.path is defined

- name: Ensure old, conflicting Nomad config files are removed
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - /etc/nomad.d/client.hcl
    - /etc/nomad.d/server.hcl

- name: Create Nomad config directory
  ansible.builtin.file:
    path: /etc/nomad.d
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Deploy the consolidated Nomad configuration from template
  ansible.builtin.template:
    src: nomad.hcl.j2
    dest: /etc/nomad.d/nomad.hcl
    owner: root
    group: root
    mode: '0644'
  notify: Restart Nomad

- name: Copy Nomad systemd service file
  ansible.builtin.template:
    src: nomad.service.j2
    dest: /etc/systemd/system/nomad.service
    mode: '0644'
  become: yes
  notify: Restart Nomad

- name: Create systemd override directory for Nomad service
  file:
    path: /etc/systemd/system/nomad.service.d
    state: directory

- name: Add override to enforce startup order
  copy:
    dest: /etc/systemd/system/nomad.service.d/override.conf
    content: |
      [Unit]
      Wants=consul.service docker.service
      After=consul.service docker.service
  notify: Reload systemd

- name: Set NOMAD_ADDR environment variable for all users
  copy:
    dest: /etc/profile.d/nomad.sh
    mode: '0755'
    content: |
      #!/bin/sh
      export NOMAD_ADDR="http://127.0.0.1:4646"
