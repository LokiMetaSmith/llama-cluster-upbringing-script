---
- name: Download Nomad
  ansible.builtin.get_url:
    url: "{{ nomad_zip_url }}"
    dest: "/tmp/nomad.zip"
    mode: '0644'
    timeout: 30

- name: Unzip Nomad
  ansible.builtin.unarchive:
    src: "/tmp/nomad.zip"
    dest: "/tmp"
    remote_src: yes
    creates: /tmp/nomad

- name: Move Nomad to /usr/local/bin
  ansible.builtin.copy:
    src: /tmp/nomad
    dest: /usr/local/bin/nomad
    remote_src: yes
    mode: '0755'
  become: yes

- name: Ensure old, conflicting Nomad config files are removed
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop:
    - /etc/nomad.d/client.hcl
    - /etc/nomad.d/server.hcl
  become: yes

- name: Create Nomad config directory
  ansible.builtin.file:
    path: /etc/nomad.d
    state: directory
    owner: root
    group: root
    mode: '0755'
  become: yes

- name: Deploy the client Nomad configuration from template
  ansible.builtin.template:
    src: nomad.hcl.client.j2
    dest: /etc/nomad.d/client.hcl
    owner: root
    group: root
    mode: '0644'
  become: yes

- name: Copy Nomad systemd service file
  ansible.builtin.template:
    src: nomad.service.j2
    dest: /etc/systemd/system/nomad.service
    mode: '0644'
  become: yes

- name: Create systemd override directory for Nomad service
  ansible.builtin.file:
    path: /etc/systemd/system/nomad.service.d
    state: directory
  become: yes

- name: Add override to enforce startup order
  ansible.builtin.copy:
    dest: /etc/systemd/system/nomad.service.d/override.conf
    content: |
      [Unit]
      Wants=consul.service docker.service
      After=consul.service docker.service
  become: yes

- name: Set NOMAD_ADDR environment variable for all users
  ansible.builtin.copy:
    dest: /etc/profile.d/nomad.sh
    mode: '0755'
    content: |
      #!/bin/sh
      export NOMAD_ADDR="http://127.0.0.1:4646"
  become: yes

- name: Ensure CNI plugin directory exists
  ansible.builtin.file:
    path: /opt/cni/bin
    state: directory
    mode: '0755'
  become: yes

- name: Download CNI plugins tarball
  ansible.builtin.get_url:
    url: "{{ cni_url }}"
    dest: /tmp/cni-plugins.tgz
    mode: '0644'
    timeout: 30

- name: Extract CNI plugins into /opt/cni/bin
  ansible.builtin.unarchive:
    src: /tmp/cni-plugins.tgz
    dest: /opt/cni/bin
    remote_src: yes
  become: yes

- name: Start and enable Nomad service
  ansible.builtin.systemd:
    name: nomad
    state: started
    enabled: yes
    daemon_reload: yes
  become: yes
  async: 45
  poll: 5
  register: nomad_service_start
  ignore_errors: true # Continue to the debug steps even if this fails

- name: Check Nomad service status if start task failed
  when: nomad_service_start.failed
  block:
    - name: Get Nomad service status
      ansible.builtin.command: systemctl status nomad --no-pager
      register: nomad_status
      failed_when: false
      changed_when: false
      become: yes

    - name: Display Nomad service status
      ansible.builtin.debug:
        var: nomad_status.stdout_lines

    - name: Get last 50 lines of Nomad logs
      ansible.builtin.command: journalctl -u nomad --no-pager -n 50
      register: nomad_logs
      failed_when: false
      changed_when: false
      become: yes

    - name: Display Nomad logs and fail
      ansible.builtin.fail:
        msg: |
          Nomad service failed to start. Please check the logs above for errors.
          Common issues are misconfigured client.hcl, networking problems,
          or failed dependencies like Consul or Docker.
          Logs:
          {{ nomad_logs.stdout }}
