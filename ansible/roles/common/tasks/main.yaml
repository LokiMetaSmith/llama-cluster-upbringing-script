---
- name: Update apt cache
  apt:
    update_cache: yes
    cache_valid_time: 3600

- name: Upgrade all packages to the latest version
  apt:
    upgrade: dist

- name: Install common packages
  apt:
    name:
      - openssh-server
      - chrony
      - git
      - cmake
      - curl
      - python3-full
      - python3-pip
      - libcurl4-openssl-dev
      - rsync
    state: present

- name: Manage /etc/hosts file on controller for name resolution
  template:
    src: hosts.j2
    dest: /etc/hosts
  when: ansible_host == '127.0.0.1'

- name: Find the default gateway interface
  shell: "ip route | grep default | awk '{print $5}'"
  register: default_gw_interface
  changed_when: false
  check_mode: no
  when: ansible_host != '127.0.0.1'

- name: Disable any non-gateway interfaces that have an IP
  community.general.nmcli:
    conn: "{{ item.device }}"
    state: disconnected
  loop: "{{ ansible_interfaces }}"
  when:
    - ansible_host != '127.0.0.1'
    - item.ipv4 is defined
    - item.device != default_gw_interface.stdout
    - item.device != 'lo'

- name: Prevent system sleep but allow screen blanking
  lineinfile:
    path: /etc/systemd/logind.conf
    regexp: '^#?IdleAction=.*'
    line: 'IdleAction=lock'
  notify: restart systemd-logind
  
- name: Debug nomad_models_dir
  ansible.builtin.debug:
    var: nomad_models_dir
    
- name: Create parent directory for all models
  ansible.builtin.file:
    path: "{{ nomad_models_dir }}"
    state: directory
    mode: '0755'
  become: yes

- name: Create unified model directory structure
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - "{{ nomad_models_dir }}/llm"
    - "{{ nomad_models_dir }}/stt"
    - "{{ nomad_models_dir }}/tts"
    - "{{ nomad_models_dir }}/embedding"
    - "{{ nomad_models_dir }}/vision"
  become: yes

- name: Deploy SSH authorized keys sync script
  ansible.builtin.template:
    src: update-ssh-authorized-keys.sh.j2
    dest: /usr/local/bin/update-ssh-authorized-keys.sh
    mode: '0755'
  register: sync_script

- name: Perform initial SSH key sync
  ansible.builtin.command:
    cmd: /usr/local/bin/update-ssh-authorized-keys.sh
  when: sync_script.changed
