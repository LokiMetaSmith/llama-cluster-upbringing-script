- name: Discover and save the MAC address for future use
  ansible.builtin.blockinfile:
    path: "host_vars/{{ inventory_hostname }}.yaml"
    create: yes
    block: |
      mac_address: "{{ ansible_default_ipv4.macaddress }}"
  delegate_to: localhost
---
- name: Check the status of all nodes and wake them if down
  hosts: all
  gather_facts: false

  tasks:
    - name: Attempt to connect to the host
      ansible.builtin.ping:
      register: ping_result
      ignore_unreachable: true

    - name: Send Wake-on-LAN packet if host is down
      # This task runs on your controller but acts on behalf of the offline host
      community.general.wakeonlan:
        mac: "{{ mac_address }}"
        broadcast: 192.168.1.255 #<-- Optional: Use your network's broadcast IP
      delegate_to: localhost
      when: ping_result.unreachable is defined and ping_result.unreachable

    - name: Report status for reachable hosts
      ansible.builtin.debug:
        msg: "✅ {{ inventory_hostname }} is UP"
      when: ping_result.unreachable is not defined

    - name: Report status for unreachable hosts
      ansible.builtin.debug:
        msg: "❌ {{ inventory_hostname }} is DOWN (Wake-on-LAN packet sent)"
      when: ping_result.unreachable is defined and ping_result.unreachable
---
- name: Play 1 - Bootstrap New Nodes as 'root'
  hosts: all
  remote_user: root
  become: no # We are already root, no need for sudo

  tasks:
    - name: Ensure the sudo group exists
      ansible.builtin.group:
        name: sudo
        state: present

    - name: Create the 'user' account with sudo access
      ansible.builtin.user:
        name: user
        shell: /bin/bash
        groups: sudo
        append: yes

    - name: Allow 'user' to have passwordless sudo access
      ansible.builtin.lineinfile:
        path: /etc/sudoers.d/ansible-user-nopasswd
        line: "user ALL=(ALL) NOPASSWD: ALL"
        create: yes
        validate: 'visudo -cf %s'
        mode: '0440'

---
- name: Play 2 - Configure Nodes as 'user'
  hosts: all
  remote_user: user
  become: yes # Now we use the sudo privileges we just created

  roles:
    - common
    - consul
    - docker
    - nomad
    - python_deps
    - llama_cpp
    - whisper_cpp
    - provisioning_api
