---
# -----------------------------------------------------------------------------
# Ansible Playbook: Debug Nomad Template
#
# Purpose:
# This playbook provides a fast way to render a single Nomad job file from its
# Jinja2 template. It's designed for quick debugging and validation of the
# template without running the entire, time-consuming main bootstrap script.
#
# How it Works:
# 1. It loads the necessary model definitions from `group_vars/models.yaml`.
# 2. It defines the `llm_models_var` variable, which the Nomad template expects.
# 3. It uses the `ansible.builtin.template` module to process
#    `ansible/jobs/llamacpp-rpc.nomad` and saves the output to a new file named
#    `rendered_llamacpp_job.nomad` in the project's root directory.
#
# -----------------------------------------------------------------------------
- name: Debug and Render Nomad Template
  # This playbook runs only on the local machine where you are running Ansible.
  hosts: localhost
  connection: local
  gather_facts: no

  # Load the file containing the definitions for all AI models.
  # This is necessary because the Nomad template refers to these variables.
  vars_files:
    - group_vars/models.yaml

  # Define the `llm_models_var` variable.
  # The main playbook creates this variable in the `vars` section of a role,
  # but for this standalone debug playbook, we define it here directly.
  # It simply takes the content of the `llm_models` variable loaded from the file.
  vars:
    llm_models_var: "{{ llm_models }}"

  tasks:
    - name: Render the llama.cpp Nomad job from template
      ansible.builtin.template:
        # Source: The Jinja2 template file for the Nomad job.
        src: ansible/jobs/llamacpp-rpc.nomad
        # Destination: The output file. This will be a pure, valid HCL file
        # that you can test directly with the `nomad` command.
        dest: ./rendered_llamacpp_job.nomad
        # Set standard file permissions for the rendered file.
        mode: '0644'
