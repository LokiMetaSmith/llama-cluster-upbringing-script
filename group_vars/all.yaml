# This file contains variables that are common to all hosts in the inventory.
# It's a good place to define default values that might be overridden by
# more specific group_vars files.
expected_cluster_size: "{{ groups['workers'] | length if 'workers' in groups else 1 }}"

ansible_python_interpreter: /usr/bin/python3

# This variable dynamically determines the IP address for Nomad to advertise.
# It prefers the first non-loopback IPv6 address if available,
# otherwise it falls back to the default IPv4 address.
advertise_ip: "{{ (ansible_all_ipv6_addresses | reject('equalto', '::1') | list | first) |
default(ansible_default_ipv4.address) }}"

nomad_namespace: "default"
nomad_models_dir: "/opt/nomad/models"

# Pipecat application settings
llama_api_service_name: "llamacpp-rpc-api"
use_summarizer: "false"
stt_service: "faster-whisper"
pipecat_app_dir: "/opt/pipecatapp"
pipecat_log_file: "/opt/pipecatapp/pipecat.log"
# ... existing variables ...
active_stt_provider: "faster-whisper"
active_stt_model_name: "tiny.en"

# 1. Generate a new, secure key
#python -c "import secrets; print(secrets.token_hex(32))"
# Example output: a1b2c3d4e5f6...

# 2. Hash the key (replace <your_key> with the output from the first command)
#echo -n "<your_key>" | sha256sum
# Example output: <hashed_key>  -
pipecat_api_keys: ""

# ... existing variables ...

# -- Storing Secrets with Ansible Vault --
# This is the plain text version. In a real environment, you should
# encrypt this variable. First, create an encrypted file:
#   ansible-vault create group_vars/secrets.yaml
# Then, add the following to that file:
#   openai_api_key: "sk-..."
# Your main playbook should then include:
#   vars_files:
#     - group_vars/secrets.yaml
# For now, we'll place it here for simplicity.
openai_api_key: "sk-your_openai_api_key_here"

# Home Assistant Long-Lived Access Token
# 1. Go to your Home Assistant UI -> Your Profile (bottom left)
# 2. Scroll down to "Long-Lived Access Tokens"
# 3. Click "Create Token", give it a name (e.g., "Ansible"), and copy the generated token here.
home_assistant_token: "your_long_lived_access_token_here"

# Model definitions have been moved to group_vars/models.yaml

# The default user for remote connections and service execution.
target_user: ubuntu

# A list of all available experts. This is used to dynamically generate
# the Nomad jobs for each expert model.
experts:
  - main
  - coding
  - math
  - extract
  - router

# --- PXE Boot Configuration ---

# Select the operating system for the PXE server.
# Options: "debian" or "nixos". Defaults to "debian" for backward compatibility.
pxe_os: "debian"

# -- NixOS PXE Server Variables --
# These variables are only used if pxe_os is set to "nixos".

# The network interface on the PXE server for DHCP/TFTP/HTTP services.
pxe_interface: "enp0s8"

# The public SSH key to embed in the NixOS clients for root access.
# Replace this with your actual public key.
pxe_client_ssh_key: "ssh-rsa AAAA..."

# DHCP network configuration for NixOS clients.
pxe_subnet: "192.168.1.0"
pxe_netmask: "255.255.255.0"
pxe_range_start: "192.168.1.200"
pxe_range_end: "192.168.1.250"
pxe_router: "192.168.1.1"
