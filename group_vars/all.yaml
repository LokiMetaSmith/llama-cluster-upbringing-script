expected_cluster_size: "{{ groups['workers'] | length if 'workers' in groups else 1 }}"

# This variable dynamically determines the IP address for Nomad to advertise.
# It prefers the first non-loopback IPv6 address if available,
# otherwise it falls back to the default IPv4 address.
advertise_ip: "{{ (ansible_all_ipv6_addresses | reject('equalto', '::1') | list | first) |
default(ansible_default_ipv4.address) }}"

nomad_models_dir: "/opt/nomad/models"

# Pipecat application settings
llama_api_service_name: "llamacpp-rpc-api"
use_summarizer: "false"
stt_service: "faster-whisper"
pipecat_app_dir: "/opt/pipecatapp"
pipecat_log_file: "/tmp/pipecat.log"
# ... existing variables ...
active_stt_provider: "faster-whisper"
active_stt_model_name: "tiny.en"

# 1. Generate a new, secure key
#python -c "import secrets; print(secrets.token_hex(32))"
# Example output: a1b2c3d4e5f6...

# 2. Hash the key (replace <your_key> with the output from the first command)
#echo -n "<your_key>" | sha256sum
# Example output: <hashed_key>  -
pipecat_api_keys: ""

# ... existing variables ...

# Configuration for external, third-party LLM experts.
# This is a dictionary that will be converted to a JSON string.
external_model_server: false
external_experts_config:
  openai_gpt4:
    base_url: "https://api.openai.com/v1"
    api_key_env: "OPENAI_API_KEY"
    model: "gpt-4-turbo" # Specify the exact model name

# -- Storing Secrets with Ansible Vault --
# This is the plain text version. In a real environment, you should
# encrypt this variable. First, create an encrypted file:
#   ansible-vault create group_vars/secrets.yaml
# Then, add the following to that file:
#   openai_api_key: "sk-..."
# Your main playbook should then include:
#   vars_files:
#     - group_vars/secrets.yaml
# For now, we'll place it here for simplicity.
openai_api_key: "sk-your_openai_api_key_here"

# Model definitions have been moved to group_vars/models.yaml

# A list of all available experts. This is used to dynamically generate
# the Nomad jobs for each expert model.
experts:
  - main
  - coding
  - math
  - extract
